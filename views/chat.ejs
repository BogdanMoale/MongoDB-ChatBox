
<html>
    <head>
        <title>Chat v1.0</title>
        <link rel="stylesheet" href="css/main.css">
		<style>
body,
textarea
input{
    font:13px "Trebuchet MS", sans-serif;
}

.chat{
    max-width: 300px;
}

.chat-messages,
.chat-textarea,
.chat-name{
    border: 1px solid #bbb;
}

.chat-messages{
    width: 100%;
    height: 300px;
    overflow-y: scroll;
    padding: :10px;
}

.chat-name{
    width: 100%;
    padding: 10px;
    border-bottom: 0;
    margin: 0;
    
}

.chat textarea{
    width: 100%;
    padding: 10px;
    margin: 0;
    border-top: 0;
    max-width: 100%;
}

.chat-status{
    color: #bbb;
}

.chat textarea,
.chat-name{
    outline: none;
}


.chat-message{
    margin-bottom: 10px;
}
			
			.chat textarea{
				
			}
			

		</style>
    </head>
    <body bgcolor="#E6E6FA">
		<center>
        <div class="chat">
            <input type="text" class="chat-name" placeholder="Enter your name">
            <div class="chat-messages">
            </div>
            <textarea  class="chat-textarea" placeholder="Type your message"></textarea>
            <div class="chat-status">Status: <span>Idle</span></div>
        </div>
		</center>
        <script src="http://127.0.0.1:8080/socket.io/socket.io.js">
        </script>
        
        <script>
            (function(){
                var getNode=function(s){
                    return document.querySelector(s);
                },
                
                //get required nodes
                status=getNode('.chat-status span'),
				messages=getNode('.chat-messages'),
                textarea=getNode('.chat textarea'),
                chatName=getNode('.chat-name'),
				
				statusDefault=status.textContent,
				
				setStatus=function(s){
					status.textContent=s;
					
					if(s !== statusDefault){
						var delay = setTimeout(function(){
							setStatus(statusDefault)
							clearInterval(delay);
						}, 3000);
					}
				};
				
				
                
                try{
                    var socket=io.connect('http://127.0.0.1:8080');
                }
                catch(e){
                    
                }
                
                if(socket!==undefined){
					
					//listen for output
					
					socket.on('output', function(data){
						if(data.length){
							//loop through messages
							for(var i=0; i < data.length; i++){
								var message = document.createElement('div');
								
								message.setAttribute('class', 'chat-message');
								message.textContent=data[i].name + ' : ' + data[i].message;
								
								messages.appendChild(message);
								messages.insertBefore(message, messages.firstChild);
								
								
							}
						}
					});
					
					//listen for status
					
					socket.on('status', function(data){
						setStatus((typeof data === 'object') ? data.message : data);
						
						if(data.clear===true){
							textarea.value= '';
						}
					});
					
					
					
                    //listen for keydown
					textarea.addEventListener('keydown', function(event){
						var self=this,
							name=chatName.value;
						
						if(event.which==13 && event.shiftKey==false){
							socket.emit('input', {
									   name: name,
									   message: self.value
							});	
							
							event.preventDefault();
						}
						
					});
                }
                
                
            })();
        </script>
    </body>
</html>
            
        